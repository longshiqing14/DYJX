<!DOCTYPE html>
<html>

	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<title>货运单新增/修改</title>
		<link href="../css/mui.min.css" rel="stylesheet" />
		<link href="../css/xtt.css" rel="stylesheet" />
		<link href="../css/iconfont.css" rel="stylesheet" />
		<link href="../css/merchant.css" rel="stylesheet" />
		<style type="text/css">
			.showimg {
				margin: 5px 10px auto 10px;
				text-align: center;
			}
		</style>
	</head>

	<body>
		<header class="mui-bar mui-bar-nav">
			<a class="mui-action-back mui-icon mui-icon-left-nav mui-pull-left"></a>
			<h1 id="title" class="mui-title">货运单新增/修改</h1>
		</header>
		<div class="mui-content">
			<form id="editForm" class="mui-input-group" style="margin-top: 0px;margin-bottom: 60px;">
				<input type="hidden" id="AreaId" name="AreaId" value="1">
				<input type="hidden" id="Id" name="Id" value="">
				<input type="hidden" id="OrderType" name='OrderType' value="" />
				<div class="mui-input-row mui-hidden">
					<a class="mui-navigate-right">
						<label>
							当前身份
						</label>
						<input type="text" readonly placeholder="选择当前身份..." id="Certificate" name="Certificate">
					</a>
				</div>
				<div class="mui-input-row">
					<a class="mui-navigate-right">
						<label>
							物流班次
						</label>
						<input type="text" readonly placeholder="广州汽配退货专线" id="LineId" name="LineId">
					</a>
				</div>
				<div class="mui-input-row">
					<a class="mui-navigate-right">
						<label>发货商户</label>
						<input type="text" readonly placeholder="请选择发货商户..." id="SendId" name="SendId">
						<input type="hidden" id='SendMemberID' name="SendMemberID" />
					</a>
				</div>

				<div class="mui-input-row" style="height: 80px;">
					<p>
						<textarea rows="3" placeholder="" name="" style="font-size: 14px;overflow:hidden;" readonly="readonly" id="SendAddress">
		                </textarea>
					</p>
				</div>

				<div class="mui-input-row">
					<a class="mui-navigate-right">
						<label>收货商户</label>
						<input type="text" readonly placeholder="请选择收货商户..." id="ReceiveId" name="ReceiveId">
						<input type="hidden" id='ReceiveMemberID' name="ReceiveMemberID" />
					</a>
				</div>

				<div class="mui-input-row" style="height: 80px;">
					<p>
						<textarea rows="3" placeholder="" name="" style="font-size: 14px;overflow:hidden;" readonly="readonly" id="ReceiveAddress">
		                </textarea>
					</p>
				</div>

				<div class="multi-input-row">
					<div class="col-6">
						<div class="mui-input-row">
							<a>
								<label style="padding-right: 2px;">收货</label>
								<input type="text" readonly placeholder="请选收货点..." id="StartOutletId" name="StartOutletId">
							</a>
						</div>
					</div>
					<div class="col-6">
						<div class="mui-input-row">
							<a>
								<label style="padding-right: 2px;">卸货</label>
								<input type="text" readonly placeholder="请选卸货点..." id="EndOutletId" name="EndOutletId">
							</a>
						</div>
					</div>
				</div>
				<div class="mui-input-row mui-hidden" id='divBindCustomer'>
					<a class="mui-navigate-right">
						<label>绑定商户</label>
						<input type="text" readonly placeholder="普通订单需绑定收货商户..." id="ReceiveCustomerId" name="ReceiveCustomerId">
					</a>
				</div>
				<div class="mui-input-row">
					<label>关联发货人</label>
					<input type="text" id="BindLogisticsSender" readonly="readonly" placeholder="" name="BindLogisticsSender">
				</div>
				<div class="mui-input-row">
					<label>
							关联单号
					</label>
					<input type="text" placeholder="关联物流单号" style="width:160px;float:left" id="BindLogisticsOrderNumber" name="BindLogisticsOrderNumber">
					<input type="hidden" id="ImageFileName" name='ImageFileName' value="" />
					<a id="headImage" class="mui-btn mui-btn-blue" style="float:right; margin-top: 1px; margin-right: 5px; width:80px;">
						上传图片
					</a>
				</div>
				<div class="mui-input-row" style="height: 60px;">
					<div class="showimg">
					</div>
				</div>
				
				<div class="mui-input-row">
					<label>
							关联运费
						</label>
					<div style="float: right;margin-top: 10px;">到付</div>
					<div id='divMemberReceivePay' class="mui-switch mui-switch-mini mui-switch-blue mui-active" style="margin-right: 4px;">
						<div class="mui-switch-handle"></div>
					</div>
					<div style="float: right;margin-top: 10px; margin-right: 2px;">现付</div>
					<input type="text" placeholder="关联运费" style="width:100px;float:left" id="BindLogisticsFee" name="BindLogisticsFee">
				</div>
				<div class="mui-input-row">
					<label>关联代收款</label>
					<input type="text" id="MemberPayFee" placeholder="请输代收款项" name="MemberPayFee">
				</div>
				<div class="mui-input-row" style="height: 85px;">
					<label>物品件数</label>
					<div class="mui-numbox" data-numbox-min='1' data-numbox-max='100'>
						<button class="mui-btn mui-btn-numbox-minus" type="button">-</button>
						<input id="ServicesGoodsTotalQuantity" class="mui-input-numbox" type="number" name="ServicesGoodsTotalQuantity" value="1" />
						<button class="mui-btn mui-btn-numbox-plus" type="button">+</button>
					</div>

					<label style="width: 5%;"></label>
					<ul id='ulGoodsCount' class="mui-pagination mui-pagination-sm mui-pull-right" style="margin-top: 6px;">
						<li>
							<a href="javascript:void(0)">
								1
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								2
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								3
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								4
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								5
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								6
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								7
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								8
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								9
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								10
							</a>
						</li>
					</ul>
				</div>

				<div class="mui-input-row mui-hidden">
					<label style="width: 85px;">运费</label>
					<div class="mui-numbox mui-hidden" data-numbox-min='1' data-numbox-max='1000'>
						<button class="mui-btn mui-btn-numbox-minus" type="button">-</button>
						<input id="Fee" class="mui-input-numbox" name="Fee" type="number" value="5" />
						<button class="mui-btn mui-btn-numbox-plus" type="button">+</button>
						<input type="hidden" name="IsNeedReceiveMemberPay" id="IsNeedReceiveMemberPay" />
					</div>

					<!--<label style="width: 5%;"></label>-->
					<ul id="ulFee" class="mui-pagination mui-pagination-sm mui-pull-right mui-hidden" style="margin-top: 6px;">
						<li>
							<a href="javascript:void(0)">
								50
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								45
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								40
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								35
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								30
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								25
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								20
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								15
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								10
							</a>
						</li>
						<li>
							<a href="javascript:void(0)">
								5
							</a>
						</li>

					</ul>
				</div>
				<div class="mui-input-row">
					<label>物品描述</label>
					<input type="text" id="ServicesGoodsDescription" placeholder="请输入物品描述" value="汽配" name="ServicesGoodsDescription">
				</div>

				<div class="mui-input-row mui-hidden">
					<label>手续费</label>
					<input type="text" id="MemberPayFeeRate" placeholder="请输代收手续费" name="MemberPayFeeRate">
				</div>
				<div class="mui-input-row mui-hidden">
					<label>声明保价</label>
					<input type="text" id="GoodsPrice" placeholder="请输声明保价价值" name="GoodsPrice">
				</div>

				<div class="mui-input-row mui-hidden">
					<label>保费金额</label>
					<input type="text" id="GoodsPriceFee" placeholder="保费金额" name="GoodsPriceFee">
				</div>

				<div class="mui-input-row mui-hidden">
					<label>长途总价</label>
					<input type="text" id="TotalTranshipmentFee" style="width:80px;float:left" placeholder="长途总价" name="TotalTranshipmentFee">
					<label style="width:90px;">中转费</label>
					<input type="text" id="TranshipmentFee" style="width:60px;float:left" readonly="" name="TranshipmentFee">
				</div>

				<div class="mui-input-row mui-hidden">
					<label>打木架</label>
					<input type="text" id="BoxFee" placeholder="请输入打木架费用" name="BoxFee">
				</div>

				<div class="mui-input-row mui-hidden">
					<label>打木架方</label>
					<div class="mui-checkbox mui-pull-left mui-left" style="margin-left:1px;margin-right:1px;padding-left: 1px;padding-right: 1px; width:105px">
						<label style="font-size: 12px;margin-left:1px;margin-right:1px;padding-left: 45px;padding-right: 1px">发货人打</label>
						<input name="BoxFeeType" value="1" id="BoxFeeType1" type="checkbox">
					</div>
					<div class="mui-checkbox mui-pull-left mui-left" style="margin-left:1px;margin-right:1px;padding-left: 1px;padding-right: 1px; width:125px">
						<label style="font-size: 12px;margin-left:1px;margin-right:1px;padding-left: 45px;padding-right: 1px">物流公司打</label>
						<input name="BoxFeeType" value="2" id="BoxFeeType2" type="checkbox">
					</div>
				</div>

				<div class="mui-input-row mui-hidden">
					<label>总计运费</label>
					<input type="text" id="TotalAccount" placeholder="" readonly>
				</div>
				<div class="mui-input-row mui-hidden" style="height: 60px;">
					<label>实收运费</label>
					<textarea rows="3" placeholder="实收运费" name="RealAccount" readonly id="RealAccount"></textarea>
				</div>

				<div class="mui-input-row mui-hidden">
					<div class="mui-radio mui-pull-left mui-left ">
						<label style="font-size: 12px;">上门收件</label>
						<input name="PickType" value="0" checked="checked" type="radio">
					</div>
					<div class="mui-radio mui-pull-left mui-left">
						<label style="font-size: 12px;">推车上门</label>
						<input name="PickType" value="1" type="radio">
					</div>
					<div class="mui-radio mui-pull-left mui-left">
						<label style="font-size: 12px;">自送件</label>
						<input name="PickType" value="2" type="radio">
					</div>
					<input type="hidden" id="PickType" value="0" />
				</div>
				<div class="mui-input-row mui-hidden">
					<div class=" mui-radio mui-pull-left mui-left ">
						<label style="font-size: 12px;">人工派货</label>
						<input name="SendType" value="0" checked="checked" type="radio">
					</div>
					<div class="mui-radio mui-pull-left mui-left">
						<label style="font-size: 12px;">开车派货</label>
						<input name="SendType" value="1" type="radio">
					</div>
					<div class="mui-radio mui-pull-left mui-left">
						<label style="font-size: 12px;">自取件</label>
						<input name="SendType" value="2" type="radio">
					</div>
					<input type="hidden" id="SendType" value="0" />
				</div>
				<div class="mui-input-row">
					<label>备注</label>
					<input type="text" id="Remark" placeholder="" name="Remark">
				</div>

				<div class="mui-input-row" style="height: 230px;">

					<textarea rows="10" readonly id="OrderLogs"></textarea>
				</div>

			</form>
			<div id='divSave' class="mui-button-row bottom-action-bar mui-hidden">
				<button id="btnSave1" type="button" class="mui-btn mui-btn-primary mui-btn-block">
					保存
				</button>
			</div>
			<div id='divSaveAndAccept' class="mui-button-row bottom-action-bar">
				<button id="btnSave2" type="button" style="width:49%;height:55px;" class="mui-btn mui-btn-primary">
					保存
				</button>
				<button id="btnAccept" type="button" style="width:49%;height:55px;" class="mui-btn mui-btn-primary mui-btn-danger">
					接单
				</button>
			</div>
		</div>
		<script src="../js/mui.min.js"></script>
		<script src="../js/zepto-1.1.6.min.js"></script>
		<script src="../js/xtt.js"></script>
		<script src="../js/binaryajax.js" type="text/javascript" charset="utf-8"></script>
		<script src="../js/exif.js" type="text/javascript" charset="utf-8"></script>
		<script src="../js/canvasResize.js" type="text/javascript" charset="utf-8"></script>
		<script type="text/javascript" charset="utf-8">
			//初始化
			mui.init({
				swipeBack: false //关闭自动右滑返回功能
			});
			xtt.setSwipeRightBack();
			//plusReady
			mui.plusReady(function() {
				xtt.initPlusReady();
			});
			var Id = $('#Id');
			var OrderType = $('#OrderType');
			var title = $('#title'); //标题
			var LineId = $('#LineId'); //物流班次
			var SendId = $('#SendId'); //发货商户
			var SendMemberID = $('#SendMemberID'); //发货会员
			var ReceiveId = $('#ReceiveId'); //收货商户
			var ReceiveMemberID = $('#ReceiveMemberID') //收货会员
			var ReceiveCustomerId = $('#ReceiveCustomerId'); //绑定收货商户
			var ServicesGoodsTotalQuantity = $('#ServicesGoodsTotalQuantity');
			var Fee = $('#Fee');
			var ServicesGoodsDescription = $('#ServicesGoodsDescription');
			var MemberPayFee = $('#MemberPayFee');
			var MemberPayFeeRate = $('#MemberPayFeeRate');
			var IsNeedReceiveMemberPay = $('#IsNeedReceiveMemberPay');
			var GoodsPrice = $('#GoodsPrice');
			var GoodsPriceFee = $('#GoodsPriceFee');
			var TranshipmentFee = $('#TranshipmentFee');
			var TotalTranshipmentFee = $('#TotalTranshipmentFee');
			var BoxFee = $('#BoxFee');
			var PickType = $('#PickType');
			var SendType = $('#SendType');
			var Remark = $('#Remark');
			var divSave = $('#divSave');
			var divSaveAndAccept = $('#divSaveAndAccept');
			var divBindCustomer = $('#divBindCustomer');
			var TotalAccount = $('#TotalAccount');
			var RealAccount = $('#RealAccount');
			var SendAddress = $('#SendAddress');
			var ReceiveAddress = $('#ReceiveAddress');
			var StartOutletId = $('#StartOutletId');
			var EndOutletId = $('#EndOutletId')
			var OrderLogs = $('#OrderLogs');
			var Certificate = $('#Certificate');
			var BindLogisticsOrderNumber = $('#BindLogisticsOrderNumber');
			var BindLogisticsFee = $('#BindLogisticsFee');
			var ImageFileName = $('#ImageFileName'); //上传图片后，服务器保存的文件名称;
			var BindLogisticsSender= $('#BindLogisticsSender');

			//保存最后一次信息，包含修改或者新增
			var lineInfo = {};
			var startOutletInfo = {};
			var endOutletInfo = {};
			var EndOutletData = {};

			btnSave1 = $('#btnSave1');
			btnSave2 = $('#btnSave2');
			btnAccept = $('#btnAccept');
			var btnArray = ['确认', '取消'];
			/**
			 * 初始化数据，清空
			 */
			function defautValue() {
				Id.val('');
				OrderType.val('1');
				//LineId.val('');
				SendId.val('');
				SendId.attr('data-', '');
				ReceiveId.val('');
				ReceiveId.attr('data-', '');
				ReceiveMemberID.val('');
				SendMemberID.val('');
				ReceiveCustomerId.val('');
				ReceiveCustomerId.attr('data-', '');
				ServicesGoodsTotalQuantity.val('1');
				Fee.val('5');
				ServicesGoodsDescription.val('汽配');
				IsNeedReceiveMemberPay.val(true);
				MemberPayFee.val('');
				MemberPayFeeRate.val('');
				TotalAccount.val('');
				RealAccount.val('');
				GoodsPrice.val('');
				TranshipmentFee.val('');
				TotalTranshipmentFee.val('');
				GoodsPriceFee.val('');
				BoxFee.val('');
				Remark.val('');
				BindLogisticsOrderNumber.val('');
				BindLogisticsFee.val('');
				OrderLogs.empty();
				$('body').scrollTop(0);
				btnSave1.attr('disabled', null);
				btnSave2.attr('disabled', null);
				btnAccept.attr('disabled', null);
				mui('input[name=PickType]').each(function() {
					if($(this).val() == 0) {
						this.checked = true
					}
				});
				mui('input[name=SendType]').each(function() {
					if($(this).val() == 0) {
						this.checked = true
					}
				});
				mui('input[name=BoxFeeType]').each(function() {
					this.checked = false
				});
				SendAddress.empty();
				ReceiveAddress.empty();
				divBindCustomer.addClass('mui-hidden');

				//divSave.addClass('mui-hidden');
				//divSaveAndAccept.addClass('mui-hidden');

				//alert(JSON.stringify(lineInfo));
				if(lineInfo.LineId && lineInfo.Name) {
					LineId.val(lineInfo.Name);
					LineId.attr('data-', lineInfo.LineId)
				} else {
					LineId.val('');
					LineId.attr('data-', '')
				}
				if(startOutletInfo.Id && startOutletInfo.Name) {
					StartOutletId.val(startOutletInfo.Name);
					StartOutletId.attr('data-', startOutletInfo.Id)
				} else {
					StartOutletId.val('');
					StartOutletId.attr('data-', '')
				}
				if(endOutletInfo.Id && endOutletInfo.Name) {
					EndOutletId.val(endOutletInfo.Name);
					EndOutletId.attr('data-', endOutletInfo.Id)
				} else {
					EndOutletId.val('');
					EndOutletId.attr('data-', '')
				}
				ImageFileName.val('');
				BindLogisticsSender.val('');
				$('.showimg').empty();
			}
			/**
			 * 设置Id
			 * @param e 事件调用参数
			 */
			function setId(e) {
				var id = e.detail.id;
				title.html(id ? '货运单修改' : '货运单新增')
				defautValue();
				if(id) {
					var param = xtt.getDefaultParam();
					param['Id'] = id;
					mui.ajax(xtt.serverRoot + 'GetCompanyLogisticsOrder', {
						type: 'post',
						data: param,
						timeout: 10000,
						beforeSend: function() {
							//loadingMsg('正在恢复会话信息...');
						},
						success: function(res) {
							if(res) {
								if(res.Succeed) {
									var logisticsOrder = res.LogisticsOrder;
									if(logisticsOrder) {
										Id.val(id);
										title.html('货运单修改[' + logisticsOrder.OrderNumber + ']')
										OrderType.val(logisticsOrder.OrderType);
										LineId.val(logisticsOrder.LineName);
										LineId.attr('data-', logisticsOrder.LineId);
										SendId.val(logisticsOrder.SendShortName);
										SendId.attr('data-', logisticsOrder.SendId);
										SendMemberID.val(logisticsOrder.SendMemberID);
										ReceiveMemberID.val(logisticsOrder.ReceiveMemberID);
										ReceiveId.val(logisticsOrder.ReceiveShortName);
										ReceiveId.attr('data-', logisticsOrder.ReceiveId);
										if(logisticsOrder.SendPhone) {
											SendId.val(logisticsOrder.SendShortName + '[' + logisticsOrder.SendPhone + ']');
										}
										if(logisticsOrder.ReceivePhone) {
											ReceiveId.val(logisticsOrder.ReceiveShortName + '[' + logisticsOrder.ReceivePhone + ']');
										}
										SendAddress.empty();
										ReceiveAddress.empty();
										BindLogisticsSender.val(logisticsOrder.BindLogisticsSender);

										if(logisticsOrder.OrderType == 0) {
											//物流班次，收货人都不能更改
											//LineId.attr('disabled', 'disabled');
											SendId.attr('disabled', 'disabled');

											ReceiveId.attr('disabled', 'disabled');
											if(logisticsOrder.Status == 0) {
												ServicesGoodsTotalQuantity.val(logisticsOrder.GoodsTotalQuantity);
												ServicesGoodsDescription.val(logisticsOrder.GoodsDescription);
												//divSaveAndAccept.removeClass('mui-hidden');
												//divSave.addClass('mui-hidden');
												btnAccept.attr('disabled', null);
											} else {
												ServicesGoodsTotalQuantity.val(logisticsOrder.ServicesGoodsTotalQuantity)
												ServicesGoodsDescription.val(logisticsOrder.ServicesGoodsDescription);
												//divSave.removeClass('mui-hidden');
												//divSaveAndAccept.addClass('mui-hidden');
												btnAccept.attr('disabled', 'disabled');
											}

											SendAddress.append(((logisticsOrder.SendFullName == null || logisticsOrder.SendFullName == '') ? '暂未填写公司名称' : logisticsOrder.SendFullName) + '\r\n');
											SendAddress.append(logisticsOrder.StartPCDName + '\r\n');
											SendAddress.append(logisticsOrder.SendAddress);
											ReceiveAddress.append(((logisticsOrder.ReceiveFullName == null || logisticsOrder.ReceiveFullName == '') ? '暂未填写公司名称' : logisticsOrder.ReceiveFullName) + '\r\n');
											ReceiveAddress.append(logisticsOrder.EndPCDName + '\r\n');
											ReceiveAddress.append(logisticsOrder.ReceiveAddress);
											//divBindCustomer.removeClass('mui-hidden');
											ReceiveCustomerId.attr('data-', logisticsOrder.ReceiveCustomerId);
											ReceiveCustomerId.val(logisticsOrder.ReceiveCustomerName);
										} else {
											//LineId.attr('disabled', null);
											SendId.attr('disabled', null);
											ReceiveId.attr('disabled', null);
											ServicesGoodsTotalQuantity.val(logisticsOrder.ServicesGoodsTotalQuantity)
											ServicesGoodsDescription.val(logisticsOrder.ServicesGoodsDescription);
											//divSave.removeClass('mui-hidden');
											//divSaveAndAccept.addClass('mui-hidden');
											btnAccept.attr('disabled', 'disabled');

											SendAddress.append(((logisticsOrder.SendCarCityName == null || logisticsOrder.SendCarCityName == '') ? logisticsOrder.SendFullName : logisticsOrder.SendCarCityName) + '\r\n');
											SendAddress.append(logisticsOrder.StartPCDName + '\r\n');
											SendAddress.append(logisticsOrder.SendAddress);
											ReceiveAddress.append(((logisticsOrder.ReceiveCarCityName == null || logisticsOrder.ReceiveCarCityName == '') ? logisticsOrder.ReceiveFullName : logisticsOrder.ReceiveCarCityName) + '\r\n');
											ReceiveAddress.append(logisticsOrder.EndPCDName + '\r\n');
											ReceiveAddress.append(logisticsOrder.ReceiveAddress);

											//divBindCustomer.addClass('mui-hidden');
										}

										//显示收货，卸货点
										if(logisticsOrder.StartOutletName && logisticsOrder.StartOutletId) {
											//订单中有收货点信息，则直接显示
											StartOutletId.val(logisticsOrder.StartOutletName);
											StartOutletId.attr('data-', logisticsOrder.StartOutletId);
										} else {
											//没有，则查找最近一次的保存的收货点
											if(startOutletInfo.Id && startOutletInfo.Name) {
												StartOutletId.val(startOutletInfo.Name);
												StartOutletId.attr('data-', startOutletInfo.Id)
											} else {
												StartOutletId.val('');
												StartOutletId.attr('data-', '')
											}
										}
										if(logisticsOrder.EndOutletName && logisticsOrder.EndOutletId) {
											EndOutletId.val(logisticsOrder.EndOutletName);
											EndOutletId.attr('data-', logisticsOrder.EndOutletId);
										} else {
											//线路一致，则卸货点也用以前的保存的
											if(logisticsOrder.LineId == lineInfo.LineId) {
												if(endOutletInfo.Id && endOutletInfo.Name) {
													EndOutletId.val(endOutletInfo.Name);
													EndOutletId.attr('data-', endOutletInfo.Id)
												} else {
													EndOutletId.val('');
													EndOutletId.attr('data-', '')
												}
											} else {
												EndOutletId.val('');
												EndOutletId.attr('data-', '')
											}
										}

										TotalAccount.val(logisticsOrder.TotalAccount + (logisticsOrder.IsPaidFee ? '【已支付】' : '【未付】'));
										if(logisticsOrder.PromotionDescription != null && logisticsOrder.PromotionDescription != '') {
											RealAccount.val(logisticsOrder.PromotionAccount + '[' + logisticsOrder.PromotionDescription + ']');
										} else {
											RealAccount.val(logisticsOrder.PromotionAccount);
										}
										Fee.val(logisticsOrder.Fee == 0 ? '5' : logisticsOrder.Fee);
										IsNeedReceiveMemberPay.val(logisticsOrder.IsNeedReceiveMemberPay);
										if(logisticsOrder.IsNeedReceiveMemberPay) {
											$('#divMemberReceivePay').addClass('mui-active');
										} else {
											$('#divMemberReceivePay').removeClass('mui-active');
										}
										MemberPayFee.val(logisticsOrder.MemberPayFee);
										MemberPayFeeRate.val(logisticsOrder.MemberPayFeeRate);
										GoodsPrice.val(logisticsOrder.GoodsPrice == 0 ? '' : logisticsOrder.GoodsPrice);
										GoodsPriceFee.val(logisticsOrder.GoodsPriceFee == 0 ? '' : logisticsOrder.GoodsPriceFee);
										if(logisticsOrder.TranshipmentFee != null && logisticsOrder.TranshipmentFee != 0) {
											TotalTranshipmentFee.val(logisticsOrder.TotalAccount);
											TranshipmentFee.val(logisticsOrder.TranshipmentFee);
										} else {
											TotalTranshipmentFee.val('');
											TranshipmentFee.val('');
										}
										BindLogisticsOrderNumber.val(logisticsOrder.BindLogisticsOrderNumber);
										BindLogisticsFee.val(logisticsOrder.BindLogisticsFee);

										BoxFee.val(logisticsOrder.BoxFee == 0 ? '' : logisticsOrder.BoxFee);
										mui('input[name=PickType]').each(function() {
											if($(this).val() == logisticsOrder.PickType) {
												this.checked = true
											}
										});
										mui('input[name=SendType]').each(function() {
											if($(this).val() == logisticsOrder.SendType) {
												this.checked = true
											}
										});
										mui('input[name=BoxFeeType]').each(function() {
											if($(this).val() == logisticsOrder.BoxFeeType) {
												this.checked = true
											}
										});
										Remark.val(logisticsOrder.Remark);

										//绑定图片
										var images = JSON.parse(logisticsOrder.BindLogisticsImages);
										console.log(images);
										if(images != null && images.length != 0) {
											for(var i = 0; i < images.length; i++) {

												//记录到隐藏域
												ImageFileName.val(ImageFileName.val() + images[i].Name + ',');

												//显示图片
												if(images[i].Name != null && images[i].Name != '' && images[i].Name.length > 2) {
													var url = xtt.serverRoot.replace('Xtt_backLogistics','') + 'Files/' + 'Images/' + images[i].Name.substr(0, 1) + '/' + images[i].Name.substr(1, 2) + '/';
													var tb200 = url + 'tb200/' + images[i].Name;
													var originImg = url + images[i].Name;
													showRemoteImg(tb200, originImg);
													console.log(tb200);
												}
											}
										}
										console.log(ImageFileName.val());

										//mui.toast('获取货运单资料成功！');
									}

									//物流跟踪信息	
									var logisticsOrderItems = res.LogisticsOrderItems;

									//alert(JSON.stringify(logisticsOrderItems));

									if(logisticsOrderItems) {
										$.each(logisticsOrderItems, function(index, item) {
											OrderLogs.append('--------------------------------\r\n');
											OrderLogs.append(item.OrderNumberIndex + '\r\n');
											var indexLogs = JSON.parse(item.IndexDescription);
											if(indexLogs != null && indexLogs.length != 0) {
												for(var i = indexLogs.length - 1; i >= 0; i--) {
													var log = indexLogs[i];
													var act = '';
													switch(log.IndexStatus){
														case 0:
															act = '收货';
															break;
														case 1:
															act = '分货';
															break;
														case 2:
															act = '装货';
															break;
														case 3:
															act = '卸货';
															break;
														case 4:
															act = '送达';
															break;
													}
													OrderLogs.append(log.LogisticsOutletName + (log.CarNo == null ? '' : (' [' + log.CarNo + ']'))  + ' ' + act + ' [');
													OrderLogs.append(log.CreatedOn.replace('T', ' ').substr(5, 11) + '] ' + log.CreatedBy + '\r\n');
												}
											}
											OrderLogs.append('\r\n');

											/*$.each(indexLogs, function(index, log) {
												OrderLogs.append(log.LogisticsOutletName + '--' + log.CarNo + '--' + (log.IndexStatus == 0 ? '装货' : '卸货')+'\r\n');
												OrderLogs.append(log.CreatedOn.replace('T',' ').substr(0,19) + '--' + log.CreatedBy);
											});*/

										});
									}
								} else {
									mui.toast('获取货运单资料失败！' + res.Message ? res.Message : '');
									mui.back();
								}
							} else {
								mui.toast('获取货运单资料错误，请稍后再试！');
								mui.back();
							}
						},
						error: function(xhr, type, errorThrown) {
							mui.toast('请求错误！' + errorThrown);
							mui.back();
						}
					});
				} else {
					LineId.attr('disabled', null);
					SendId.attr('disabled', null);
					ReceiveId.attr('disabled', null);
					//divSave.removeClass('mui-hidden');
					//divSaveAndAccept.addClass('mui-hidden');
					btnAccept.attr('disabled', 'disabled');
				}
			}
			//侦听setId
			document.addEventListener('setId', setId);
			/**
			 * 保存
			 */
			function save() {
				//校验数据
				var lineId = LineId.attr('data-');
				if(lineId == null || lineId == '') {
					mui.toast('请选择物流班次！');
					return;
				}

				var sendId = SendId.attr('data-');
				if((sendId == null || sendId == '') && (SendMemberID.val() == null || SendMemberID.val() == '')) {
					mui.toast('请选择发货人！');
					return;
				}
				var receiveId = ReceiveId.attr('data-');
				if((receiveId == null || receiveId == '') && (ReceiveMemberID.val() == null || ReceiveMemberID.val() == '')) {
					mui.toast('请选择收货人！');
					return;
				}

				if(BindLogisticsFee.val() == null || BindLogisticsFee.val() == '' || BindLogisticsFee.val() == 0) {
					mui.toast('请输入关联运费！');
					return;
				}
				var sOutletId = StartOutletId.attr('data-');
				if(sOutletId == null || sOutletId == '') {
					mui.toast('请选择收货点！');
					return;
				}

				var eOutletId = EndOutletId.attr('data-');
				if(eOutletId == null || eOutletId == '') {
					mui.toast('请选择卸货点！');
					return;
				}

				/*var receiveCustomerId = ReceiveCustomerId.attr('data-');
				if (OrderType.val() == '0') {
					if (receiveCustomerId == null || receiveCustomerId == '') {
						mui.toast('普通订单需绑定收货商户！');
						return;
					}
				}*/
				var id = Id.val();
				var action = 'AddAgentLogisticsOrder';
				if(id && id != '') {
					if(OrderType.val() == '0') {
						action = 'UpdateMemberLogisticsOrder';
					} else if(OrderType.val() == '1') {
						action = 'UpdateAgentLogisticsOrder';
					}
				} else {
					//新增运单，需要判断班次与当前时间是否一致
					//具体就是 ： 如果选择的为白班，则时间必须要早于14点，否则提示，时间已经过晚，不能选择白班
					if(LineId.val().indexOf('白班') > -1) {
						var dDate = new Date();
						var NowHour = dDate.getHours();
						if(NowHour > 14) {
							mui.toast('时间已经过晚，不能选择白班');
							return;
						}
					}
				}
				var images = '';

				if(ImageFileName.val() != null && ImageFileName.val() != '') {
					console.log(ImageFileName.val());
					var imageNames = ImageFileName.val().split(',');
					var listFileInfo = new Array();
					for(var i = 0; i < imageNames.length; i++) {
						if(imageNames[i] != '') {
							listFileInfo.push({
								Name: imageNames[i],
								Title: '关联货运单'
							})
						}
					}
					if(listFileInfo.length != 0) {
						images = JSON.stringify(listFileInfo);
					}
				}
				console.log(images);

				var arr = $('#editForm').serializeArray();
				var logisticsOrder = {};
				$.each(arr, function(index, item) {
					logisticsOrder[item.name] = item.value;
				});
				logisticsOrder['SendId'] = sendId;
				logisticsOrder['ReceiveId'] = receiveId;
				//logisticsOrder['ReceiveCustomerId'] = receiveCustomerId;
				logisticsOrder['LineId'] = lineId;
				logisticsOrder['StartOutletId'] = sOutletId;
				logisticsOrder['StartOutletName'] = StartOutletId.val();
				logisticsOrder['EndOutletId'] = eOutletId;
				logisticsOrder['EndOutletName'] = EndOutletId.val();
				logisticsOrder['SendType'] = SendType.val();
				logisticsOrder['PickType'] = PickType.val();
				logisticsOrder['BindLogisticsImages'] = images;
				var param = xtt.getDefaultParam();
				param['LogisticsOrder'] = logisticsOrder;
				btnSave1.attr('disabled', 'disabled');
				btnSave2.attr('disabled', 'disabled');
				mui.ajax(xtt.serverRoot + action, {
					type: 'post',
					data: JSON.stringify(param),
					contentType: 'application/json',
					timeout: 10000,
					beforeSend: function(xhr, settings) {
						//loadingMsg('正在恢复会话信息...');
						//xhr.setRequestHeader('Content-Type', 'application/json');
					},
					success: function(res) {
						if(res) {
							if(res.Succeed) {
								var list = plus.webview.getWebviewById('list-orders.html');
								if(list)
									mui.fire(list, 'saved', {
										logisticsOrder: res.LogisticsOrder,
										isUpdated: action != 'AddAgentLogisticsOrder'
									});
								mui.toast('保存成功！');

								//保存最后的一次记录
								lineInfo.Name = LineId.val();
								lineInfo.LineId = LineId.attr('data-');
								startOutletInfo.Name = StartOutletId.val();
								startOutletInfo.Id = StartOutletId.attr('data-');
								endOutletInfo.Name = EndOutletId.val();
								endOutletInfo.Id = EndOutletId.attr('data-');

								Id.val(res.LogisticsOrder.Id);
								btnSave1.attr('disabled', null);
								btnSave2.attr('disabled', null);
								mui.openWindow({
									url: "index.html",
									id: "merchant",
									show: {
										aniShow: 'pop-in',
										duration: 300
									}
								});
								//mui.back();
							} else {
								mui.toast('保存失败！' + res.Message ? res.Message : '');
								btnSave1.attr('disabled', null);
								btnSave2.attr('disabled', null);
							}
						} else {
							mui.toast('保存错误，请稍后再试！');
							btnSave1.attr('disabled', null);
							btnSave2.attr('disabled', null);
						}
					},
					error: function(xhr, type, errorThrown) {
						mui.toast('请求错误！' + errorThrown);
						btnSave1.attr('disabled', null);
						btnSave2.attr('disabled', null);
					}
				});
			}

			function saveAndAccept() {
				//校验数据
				var lineId = LineId.attr('data-');
				if(lineId == null || lineId == '') {
					mui.toast('请选择物流班次！');
					return;
				}
				var sendId = SendId.attr('data-');
				if(sendId == null || sendId == '') {
					mui.toast('请选择发货商户！');
					return;
				}
				var receiveId = ReceiveId.attr('data-');
				if(receiveId == null || receiveId == '') {
					mui.toast('请选择收货商户！');
					return;
				}
				if(Fee.val() == null || Fee.val() == '' || Fee.val() == 0) {
					mui.toast('请输入运费！');
					return;
				}
				var sOutletId = StartOutletId.attr('data-');
				if(sOutletId == null || sOutletId == '') {
					mui.toast('请选择收货点！');
					return;
				}

				var eOutletId = EndOutletId.attr('data-');
				if(eOutletId == null || eOutletId == '') {
					mui.toast('请选择卸货点！');
					return;
				}
				/*var receiveCustomerId = ReceiveCustomerId.attr('data-');
				if(OrderType.val() == '0') {
					if(receiveCustomerId == null || receiveCustomerId == '') {
						mui.toast('普通订单需绑定收货商户！');
						return;
					}
				}*/
				var msg = "";
				msg += "物品件数：" + ServicesGoodsTotalQuantity.val() + "\r\n";
				msg += "　　运费：" + Fee.val();
				var totalFee = Number(Fee.val());
				if(GoodsPriceFee.val() != null && GoodsPriceFee.val() != '' && GoodsPriceFee.val() != 0) {
					msg += "\r\n　　保费：" + GoodsPriceFee.val();
					totalFee += Number(GoodsPriceFee.val());
				}
				if(BoxFee.val() != null && BoxFee.val() != '' && BoxFee.val() != 0) {
					msg += "\r\n　木架费：" + BoxFee.val();
					totalFee += Number(BoxFee.val());
				}
				msg += "\r\n费用合计：" + totalFee;
				if(MemberPayFee.val() != null && MemberPayFee.val() != '' && MemberPayFee.val() != 0) {
					msg += "\r\n　代收款：" + MemberPayFee.val();
				}
				mui.confirm(msg, '确认接单？', btnArray, function(e) {
					if(e.index == 0) {
						var id = Id.val();
						var arr = $('#editForm').serializeArray();
						var logisticsOrder = {};
						$.each(arr, function(index, item) {
							logisticsOrder[item.name] = item.value;
						});
						logisticsOrder['SendId'] = sendId;
						logisticsOrder['ReceiveId'] = receiveId;
						logisticsOrder['LineId'] = lineId;

						logisticsOrder['StartOutletId'] = sOutletId;
						logisticsOrder['StartOutletName'] = StartOutletId.val();
						logisticsOrder['EndOutletId'] = eOutletId;
						logisticsOrder['EndOutletName'] = EndOutletId.val();

						//logisticsOrder['ReceiveCustomerId'] = receiveCustomerId;
						var param = xtt.getDefaultParam();
						param['LogisticsOrder'] = logisticsOrder;
						btnAccept.attr('disabled', 'disabled');
						mui.ajax(xtt.serverRoot + 'AcceptLogisticsOrder', {
							type: 'post',
							data: JSON.stringify(param),
							contentType: 'application/json',
							timeout: 10000,
							beforeSend: function(xhr, settings) {
								//loadingMsg('正在恢复会话信息...');
								//xhr.setRequestHeader('Content-Type', 'application/json');
							},
							success: function(res) {
								if(res) {
									if(res.Succeed) {
										var list = plus.webview.getWebviewById('list-orders.html');
										if(list)
											mui.fire(list, 'saved', {
												logisticsOrder: res.LogisticsOrder,
												isUpdated: true
											});
										mui.toast('保存成功！');
										Id.val(res.LogisticsOrder.Id);

										//保存最后的一次记录
										lineInfo.Name = LineId.val();
										lineInfo.LineId = LineId.attr('data-');
										startOutletInfo.Name = StartOutletId.val();
										startOutletInfo.Id = StartOutletId.attr('data-');
										endOutletInfo.Name = EndOutletId.val();
										endOutletInfo.Id = EndOutletId.attr('data-');

										btnAccept.attr('disabled', null);
										mui.openWindow({
											url: "index.html",
											id: "merchant",
											show: {
												aniShow: 'pop-in',
												duration: 300
											}
										});
										//mui.back();
									} else {
										mui.toast('保存失败！' + res.Message ? res.Message : '');
										btnAccept.attr('disabled', null);
									}
								} else {
									mui.toast('保存错误，请稍后再试！');
									btnAccept.attr('disabled', null);
								}
							},
							error: function(xhr, type, errorThrown) {
								mui.toast('请求错误！' + errorThrown);
								btnAccept.attr('disabled', null);
							}
						});
					}
				});
			}

			function selectLine() {
				mui.fire(
					plus.webview.getWebviewById('merchant-selectLineAndOutlet'),
					'setBack', {
						backId: plus.webview.currentWebview().id,
						selectLineId: LineId.attr('data-'),
						selectStartOutlet: StartOutletId.attr('data-'),
						selectEndOutlet: EndOutletId.attr('data-'),
						orderType: OrderType.val()
					}
				);
				mui.openWindow({
					url: "selectLineAndOutlet.html",
					id: "merchant-selectLineAndOutlet",
					show: {
						aniShow: 'pop-in',
						duration: 300
					}
				});
			}

			//保存按钮事件
			document.getElementById('btnSave1').addEventListener('tap', save);
			document.getElementById('btnSave2').addEventListener('tap', save);
			document.getElementById('btnAccept').addEventListener('tap', saveAndAccept);
			document.getElementById('LineId').addEventListener('tap', selectLine);
			document.getElementById('StartOutletId').addEventListener('tap', selectLine);
			document.getElementById('EndOutletId').addEventListener('tap', selectLine);
			document.getElementById('SendId').addEventListener('tap', function() {
				mui.fire(
					plus.webview.getWebviewById('merchant-selectCustomer'),
					'setBack', {
						backId: plus.webview.currentWebview().id,
						lineId: LineId.attr('data-'),
						from: 'Sender'
					}
				);
				mui.openWindow({
					url: "selectCustomer.html",
					id: "merchant-selectCustomer",
					show: {
						aniShow: 'pop-in',
						duration: 300
					}
				});
			});
			document.getElementById('ReceiveId').addEventListener('tap', function() {
				mui.fire(
					plus.webview.getWebviewById('merchant-selectCustomer'),
					'setBack', {
						backId: plus.webview.currentWebview().id,
						lineId: LineId.attr('data-'),
						from: 'Receiver'
					}
				);
				mui.openWindow({
					url: "selectCustomer.html",
					id: "merchant-selectCustomer",
					show: {
						aniShow: 'pop-in',
						duration: 300
					}
				});
			});

			document.getElementById('ReceiveCustomerId').addEventListener('tap', function() {
				mui.fire(
					plus.webview.getWebviewById('merchant-selectCustomer'),
					'setBack', {
						backId: plus.webview.currentWebview().id,
						from: 'ReceiveCustomerId',
						keyword: ReceiveId.val(),
					}
				);
				mui.openWindow({
					url: "selectCustomer.html",
					id: "merchant-selectCustomer",
					show: {
						aniShow: 'pop-in',
						duration: 300
					}
				});
			});
			var AreaText = ["", "深圳", "广州", "中山"];
			document.addEventListener("customerSelected", function(e) {
				var customer = e.detail.customer;
				var from = e.detail.from;
				if(from == 'Sender') {
					if(customer.ParentID) {
						SendId.val(customer.MemberNO + '[' + customer.Cellphone + ']')
						SendId.attr('data-', '');
						SendMemberID.val(customer.MemberID);
						SendAddress.empty();
						SendAddress.append(customer.CompanyName + '\r\n');
						SendAddress.append(customer.PCDName + '\r\n');
						SendAddress.append(customer.Address);
					} else {
						SendId.val(customer.ShortName);
						SendId.attr('data-', customer.Id);
						SendMemberID.val('');
						SendAddress.empty();
						SendAddress.append(customer.CarCityName + '\r\n');
						SendAddress.append(customer.PCDName + '\r\n');
						SendAddress.append(customer.Address);
					}
				} else if(from == 'Receiver') {
					if(customer.ParentID) {
						ReceiveId.val(customer.MemberNO + '[' + customer.Cellphone + ']')
						ReceiveId.attr('data-', '');
						ReceiveMemberID.val(customer.MemberID);
						ReceiveAddress.empty();
						ReceiveAddress.append(customer.CompanyName + '\r\n');
						ReceiveAddress.append(customer.PCDName + '\r\n');
						ReceiveAddress.append(customer.Address);
					} else {
						ReceiveId.val(customer.ShortName);
						ReceiveId.attr('data-', customer.Id);
						ReceiveMemberID.val('');
						ReceiveAddress.empty();
						ReceiveAddress.append(customer.CarCityName + '\r\n');
						ReceiveAddress.append(customer.PCDName + '\r\n');
						ReceiveAddress.append(customer.Address);
					}
					//自动匹配卸货点，则没有匹配上，则不用处理，因为在选择线路时，已经有默认值了
					if(EndOutletData != null && EndOutletData.length != 0) {
						$.each(EndOutletData, function(index, item) {
							if(item.PId == customer.Province && item.CId == customer.City && item.DId == customer.District) {
								//自动变更卸货点
								EndOutletId.val(item.Name);
								EndOutletId.attr('data-', item.Id);
							}
						});
					}

				} else if(from == 'ReceiveCustomerId') {
					ReceiveCustomerId.val(customer.ShortName);
					ReceiveCustomerId.attr('data-', customer.Id);
				}
			});
			document.addEventListener("lineSelected", function(e) {
				var line = e.detail.Line;

				if(line.LineId != LineId.attr('data-')) {
					SendId.val('');
					SendId.attr('data-', '');
					SendMemberID.val('');
					SendAddress.empty();
					ReceiveId.val('');
					ReceiveId.attr('data-', '');
					ReceiveMemberID.val('');
					ReceiveAddress.empty();
				}
				LineId.val(line.Name);
				LineId.attr('data-', line.LineId);

				var startOutlet = e.detail.StartOutlet;
				StartOutletId.attr('data-', startOutlet.Id);
				StartOutletId.val(startOutlet.Name);

				var endOutlet = e.detail.EndOutlet;
				EndOutletId.attr('data-', endOutlet.Id);
				EndOutletId.val(endOutlet.Name);

				EndOutletData = e.detail.EndOutletData;
				//alert(JSON.stringify(EndOutletData));

			});
			mui('#ulGoodsCount a').each(function() {
				this.addEventListener('tap', function(e) {
					ServicesGoodsTotalQuantity.val($(this).html().trim());
				});
			});
			mui('#ulFee a').each(function() {
				this.addEventListener('tap',
					function(e) {
						Fee.val($(this).html().trim());
					});
			});
			document.getElementById('divMemberReceivePay').addEventListener('toggle', function(event) {
				IsNeedReceiveMemberPay.val(event.detail.isActive)
			});
			mui('#editForm').on('tap', '.mui-radio', function() {
				var name = $(this).find('input').attr('name');
				var val = $(this).find('input').val();
				if(name == "PickType") {
					PickType.val(val);
				} else if(name == "SendType") {
					SendType.val(val);
				}
			});

			mui('.mui-checkbox').on('change', 'input', function() {
				var value = this.checked ? "true" : "false";
				var id = $(this).attr('id');
				mui('input[name="BoxFeeType"]').each(function(index, element) {
					if(value == "true") {
						if($(this).attr("id") != id) {
							this.checked = false;
						}
					}
				});
			});

			/*点击头像触发*/
			document.getElementById("headImage").addEventListener('tap', function() {
				plus.nativeUI.actionSheet({
						cancel: "取消",
						buttons: [{
							title: "从手机中相册选择"
						}, {
							title: '拍照'
						}]
					},
					function(e) {
						console.log(JSON.stringify(e));
						if(e.index == 1) { //点击从相册选择
							console.log("相册选择");
							galleryImgs();
						} else if(e.index == 2) {
							console.log("手机拍照");
							cameraimages();
						}
					}
				);
			});

			//上传单张图片
			function galleryImg() {
				//每次拍摄或选择图片前清空数组对象
				f1.splice(0, f1.length);
				//document.getElementsByClassName("showimg")[0].innerHTML = null;
				// 从相册中选择图片
				mui.toast("从相册中选择一张图片");
				plus.gallery.pick(function(path) {
					showImg(path, 1);
				}, function(e) {
					mui.toast("取消选择图片");
				}, {
					filter: "image",
					multiple: false
				});
			}

			function galleryImgs() {
				//每次拍摄或选择图片前清空数组对象
				imgCount = 1;
				//document.getElementsByClassName("showimg")[0].innerHTML = null;
				// 从相册中选择图片
				plus.gallery.pick(function(e) {
					/*if(e.files.length != 2) {
						mui.toast('请选择身份证正面和背面照片共两张');
						return false;
					}*/
					chooseCount = e.files.length;
					for(var i in e.files) {
						showImg(e.files[i], i);
					}

					//imgupgrade();

				}, function(e) {
					mui.toast("取消选择图片");
				}, {
					filter: "image",
					multiple: true
				});
			}
			// 拍照添加文件

			function cameraimages() {
				//每次拍摄或选择图片前清空数组对象
				imgCount = 1;
				chooseCount = 1;
				console.log('拍照');
				//document.getElementsByClassName("showimg")[0].innerHTML = null;
				var cmr = plus.camera.getCamera();
				cmr.captureImage(function(p) {
					plus.io.resolveLocalFileSystemURL(p, function(entry) {
						var localurl = entry.toLocalURL(); //把拍照的目录路径，变成本地url路径，例如file:///........之类的。
						showImg(localurl);
					});
				}, function(e) {
					mui.toast("很抱歉，获取失败 ", e);
				});
			}
			// 全局数组对象，添加文件,用于压缩上传使用
			var f1 = new Array();
			var imgCount = 1;
			var chooseCount = 1;

			function showImg(url) {
				// 兼容以“file:”开头的情况
				console.log(url);
				if(0 != url.toString().indexOf("file://")) {
					url = "file://" + url;
				}
				var _div_ = document.getElementsByClassName("showimg")[0];
				var _img_ = new Image();
				_img_.src = url; // 传过来的图片路径在这里用。
				_img_.onclick = function() {
					plus.runtime.openFile(url);
				};

				_img_.onload = function() {
					plus.nativeUI.showWaiting('正在上传图片，请稍后...');
					var tmph = _img_.height;
					var tmpw = _img_.width;
					var isHengTu = tmpw > tmph;
					var max = Math.max(tmpw, tmph);
					var min = Math.min(tmpw, tmph);
					var bili = min / max;
					if(max > 1200) {
						max = 1200;
						min = Math.floor(bili * max);
					}
					tmph = isHengTu ? min : max;
					tmpw = isHengTu ? max : min;
					_img_.style.border = "1px solid rgb(200,199,204)";
					_img_.style.margin = "2px";
					_img_.style.width = "50px";
					_img_.style.height = "50px";
					_img_.onload = null;
					plus.io.resolveLocalFileSystemURL(url, function(entry) {
							entry.file(function(file) {
								console.log(file.size + '--' + file.name);
								canvasResize(file, {
									width: tmpw,
									height: tmph,
									crop: false,
									quality: 50, //压缩质量
									rotate: 0,
									callback: function(data, width, height) {
										//f1.push(data);
										imgupgrade(data);
										_img_.src = data;
										_div_.appendChild(_img_);
										//plus.nativeUI.closeWaiting();
									}
								});
							});
						},
						function(e) {
							//plus.nativeUI.closeWaiting();
							console.log(e.message);
						});
				};
			};

			function showRemoteImg(tb200, url) {
				var _div_ = document.getElementsByClassName("showimg")[0];
				var _img_ = new Image();
				_img_.src = tb200; // 传过来的图片路径在这里用。
				_img_.onclick = function() {
					plus.runtime.openURL(url);
				};
				_img_.onload = function() {
					var tmph = _img_.height;
					var tmpw = _img_.width;
					var isHengTu = tmpw > tmph;
					var max = Math.max(tmpw, tmph);
					var min = Math.min(tmpw, tmph);
					var bili = min / max;
					if(max > 1200) {
						max = 1200;
						min = Math.floor(bili * max);
					}
					tmph = isHengTu ? min : max;
					tmpw = isHengTu ? max : min;
					_img_.style.border = "1px solid rgb(200,199,204)";
					_img_.style.margin = "2px";
					_img_.style.width = "70px";
					_img_.style.height = "80px";
					_img_.onload = null;
					_div_.appendChild(_img_);
				};
			}

			function imgupgrade(data) {
				//mui.toast('后台联调时启用上传功能');
				//return;
				//var wt = plus.nativeUI.showWaiting('正在上传第 ' + imgIndex + ' 张图片，请稍后...');
				//发送数据  
				var filedata = new Array();
				filedata.push({
					FileData: data
				});

				var data = {
					param: filedata //base64数据        
				};

				mui.ajax(xtt.serverRoot + 'UploadJsonFiles', {
					type: 'post',
					data: JSON.stringify(data),
					contentType: 'application/json',
					timeout: 10000,
					beforeSend: function(xhr, settings) {

					},
					success: function(res) {
						if(res) {
							if(res.Succeed) {
								if(chooseCount == imgCount) {
									mui.toast('上传成功！');
									plus.nativeUI.closeWaiting()
								}
								imgCount++;
								console.log(res.File.SavedFileName);
								var filenames = ImageFileName.val() + res.File.SavedFileName + ',';
								ImageFileName.val(filenames);
								console.log(ImageFileName.val());

							} else {
								mui.toast(res.Message);
							}
						} else {
							mui.toast('保存错误，请稍后再试！');
						}
						//plus.nativeUI.closeWaiting();
					},
					error: function(xhr, type, errorThrown) {
						mui.toast('发送请求失败，请稍后再试！');
						//plus.nativeUI.closeWaiting();
					}
				});
			}
		</script>
	</body>

</html>