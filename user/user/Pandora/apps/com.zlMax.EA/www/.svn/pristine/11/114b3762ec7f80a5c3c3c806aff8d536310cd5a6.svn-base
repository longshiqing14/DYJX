<html>

	<head>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no" />
		<title>报销条目</title>
		<link href="../css/mui.min.css" rel="stylesheet" />
		<link href="../css/xtt.css" rel="stylesheet" />
		<link href="../css/iconfont.css" rel="stylesheet" />
		<link href="../css/merchant.css" rel="stylesheet" />
	</head>

	<body>
		<!--下拉刷新容器-->
		<div id="pullrefresh" class="mui-content mui-scroll-wrapper">
			<div class="mui-scroll">
				<!--数据列表-->
				<ul id="list" class="mui-table-view">

				</ul>
			</div>
		</div>
		<script src="../js/mui.min.js"></script>
		<script src="../js/zepto-1.1.6.min.js"></script>
		<script src="../js/xtt.js"></script>
		<script type="text/javascript" charset="utf-8">
			//第一次加载完成
			var hasLoaded = false;
			//查询选项，查询事件处理中需要置为初始值
			var searchOption = {
				Keyword: '',
				PageSize: 20,
				PageIndex: 0
			};
			//结果状态，查询事件处理中需要置为初始值
			var resultStatus = {
				"PageSize": 20,
				"PageIndex": 0,
				"TotalPages": 0,
				"TotalCount": -1
			};
			//列表
			var table = $('.mui-table-view');
			//查询事件
			document.addEventListener('search', function(e) {
				searchOption.Keyword = e.detail.Keyword;
				searchOption.PageIndex = 0;
				resultStatus.PageIndex = 0;
				resultStatus.TotalPages = 0;
				resultStatus.TotalCount = -1;
				hasLoaded = false;
				table.children().remove();
				setTimeout(function() {
					mui('#pullrefresh').pullRefresh().pullupLoading();
				}, 10);
			});
			//初始化
			mui.init({
				pullRefresh: {
					container: '#pullrefresh',
					down: {
						callback: pulldownRefresh
					},
					up: {
						contentrefresh: '正在加载...',
						callback: pullupRefresh
					}
				}
			});
			/**
			 * 下拉刷新具体业务实现
			 */
			function pulldownRefresh() {
				searchOption.PageIndex = 1;
				//获取数据
				var param = xtt.getDefaultParam();
				param = mui.extend(param, searchOption);
				param.PageIndex = 1;
				mui.ajax(xtt.serverRoot + 'ReimbursementCommon/ReimbursementSet', {
					type: 'post',
					data: param,
					timeout: 10000,
					beforeSend: function() {
						//loadingMsg('正在恢复会话信息...');
					},
					success: function(res) {
						if(res) {
							if(res.Succeed) {
								mui.toast('获取报销条目成功！');
								//resultStatus.PageIndex = res.PageIndex;
								resultStatus.PageSize = res.PageSize;
								resultStatus.TotalCount = res.TotalCount;
								resultStatus.TotalPages = res.TotalPages;
								updateList(res.Result.Result, false);
								mui('#pullrefresh').pullRefresh().endPulldownToRefresh();
							} else {
								mui.toast('获取报销条目失败！' + res.Message ? res.Message : '');
								mui('#pullrefresh').pullRefresh().endPulldownToRefresh();
							}
						} else {
							mui.toast('获取报销条目失败，请稍后再试！');
							mui('#pullrefresh').pullRefresh().endPulldownToRefresh();
						}
					},
					error: function(xhr, type, errorThrown) {
						mui.toast('请求错误！' + errorThrown);
						mui('#pullrefresh').pullRefresh().endPulldownToRefresh();
					}
				});
			}
			/**
			 * 上拉加载具体业务实现
			 */
			function pullupRefresh() {
				if(resultStatus.TotalCount < 0) {
					//第一次获取
					searchOption.PageIndex = 1;
				} else {
					searchOption.PageIndex = resultStatus.PageIndex + 1;
					/*if(searchOption.PageIndex > resultStatus.TotalPages){
					 mui('#pullrefresh').pullRefresh().endPullupToRefresh(true);
					 return;
					 }*/
				}
				//获取数据
				var param = xtt.getDefaultParam();
				param = mui.extend(param, searchOption);
				mui.ajax(xtt.serverRoot + 'ReimbursementCommon/ReimbursementSet', {
					type: 'post',
					data: param,
					timeout: 10000,
					beforeSend: function() {
						//loadingMsg('正在恢复会话信息...');
					},
					success: function(res) {
						if(res) {
							if(res.Succeed) {
								var str = '获取报销条目成功！';
								if(hasLoaded) {
									if(res.PageIndex >= res.TotalPages)
										str = '已经到最后一页了';
								} else {
									mui('#pullrefresh').pullRefresh().scrollTo(0, 0, 0);
								}
								mui.toast(str);
								hasLoaded = true;
								resultStatus.PageIndex = res.PageIndex;
								resultStatus.PageSize = res.PageSize;
								resultStatus.TotalCount = res.TotalCount;
								resultStatus.TotalPages = res.TotalPages;
								updateList(res.Result.Result, true);
								mui('#pullrefresh').pullRefresh().endPullupToRefresh();
							} else {
								mui.toast('获取报销条目失败！' + res.Message ? res.Message : '');
								mui('#pullrefresh').pullRefresh().endPullupToRefresh();
							}
						} else {
							mui.toast('获取报销条目失败，请稍后再试！');
							mui('#pullrefresh').pullRefresh().endPullupToRefresh();
						}
					},
					error: function(xhr, type, errorThrown) {
						mui.toast('请求错误！' + errorThrown);
						mui('#pullrefresh').pullRefresh().endPullupToRefresh();
					}
				});
			}
			/**
			 * 更新列表数据（会去重，位置会有变化，已最后取到的为准）
			 * @param carCities 报销条目数组
			 * @param append 是否添加在列表尾部
			 */
			function updateList(carCities, append) {
				var tmp = $('<div>');
				$.each(carCities, function(index, item) {
					var old = document.getElementById('li_' + item.Id);
					if(old)
						$(old).remove();
					var li = createLi(item);
					tmp.append(li);
				});
				if(append)
					table.append(tmp.children());
				else {
					if(table.children().length > 0)
						tmp.children().insertBefore(table.children().first());
					else
						table.append(tmp.children());
				}
			}
			/**
			 * 更新单个报销条目，用于编辑保存后的操作
			 * @param item
			 */
			function updateReimbursementSet(item) {
				var old = document.getElementById('li_' + item.Id);
				if(old) {
					var li = createLi(item);
					$(old).html(li.html());
				}
			}
			/**
			 * 构建列表项
			 * @param item 报销条目数据对象
			 * @returns {*|jQuery} 列表项
			 */
			function createLi(item) {
				var li = $('<li>')
					.addClass('mui-table-view-cell').attr('id', 'li_' + item.Id);
				var a = $('<a>').addClass('btn-edit')
					.append(
						$('<p>').addClass('carCity-title mui-ellipsis').append(item.FirstCategoryName)
					)
					.attr('id', item.Id);
				//if(item.Address)

				//				li.append(
				//					$('<div>').addClass('mui-slider-right mui-disabled')
				//					.append(
				//						$('<a>').addClass('mui-btn mui-btn-red btn-delete')
				//						.append('删除')
				//					)
				//				);
				//				li.append(
				//					$('<div>').addClass('mui-slider-handle')
				//					.append(a)
				//				);
				li.append(a).append(
					$('<a>').addClass('mui-btn mui-btn-red btn-delete')
					.addClass(showMore ? '' : '')
					.append('删除')
				).append(
					$('<a style="right:160px">').addClass('mui-btn mui-btn-primary btn-manager')
					.attr('data-', item.Id)
					.append(
						$('<span>').addClass('mui-icon  mui-icon-gear')
					).append('管理')
				).append(
					$('<a style="right:80px">').addClass('mui-btn mui-btn-primary btn-enter')
					.attr('data-', item.Id)
					.append(
						$('<span>').addClass('mui-icon  mui-icon-arrowthinright')
					).append('进入')
				);;

				return li;
			}
			//ready
			if(mui.os.plus) {
				mui.plusReady(function() {
					xtt.initPlusReady();
					setTimeout(function() {
						mui('#pullrefresh').pullRefresh().pullupLoading();
					}, 50);
				});
			} else {
				mui.ready(function() {
					mui('#pullrefresh').pullRefresh().pullupLoading();
				});
			}
			var reimbursement = null;
			/**
			 * 新增
			 */
			function add() {
				if(!reimbursement)
					reimbursement = plus.webview.getWebviewById('reimbursement');
				mui.fire(reimbursement, 'setId', {
					id: null
				});
				mui.openWindow({
					url: "reimbursement.html",
					id: "reimbursement",
					show: {
						aniShow: 'pop-in',
						duration: 300
					}
				});
			}
			/**
			 * 保存后的处理
			 * @param e 事件参数
			 */
			function saved(e) {
				var reimbursementSet = e.detail.reimbursementSet;
				var isUpdated = e.detail.isUpdated;
				if(reimbursementSet) {
					if(isUpdated)
						updateReimbursementSet(reimbursementSet);
					else
						updateList([reimbursementSet], false);
				}
			}

			var showMore = false; //是否显示了更多操作
			function moreAction() {
				if(showMore) {
					$('.btn-delete').addClass('mui-hidden');
					showMore = false;
				} else {
					$('.btn-delete').removeClass('mui-hidden');
					showMore = true;
				}
			}

			var editForm = null;
			/**
			 * 新增
			 */
			function addOrder(setId) {
				//console.log('addOrder');
				if(!editForm)
					editForm = plus.webview.getWebviewById('merchant-order');
				mui.fire(editForm, 'setId', {
					id: null,
					reimbursementSetId: setId
				});
				mui.openWindow({
					url: "order.html",
					id: "merchant-order",
					show: {
						aniShow: 'pop-in',
						duration: 300
					}
				});
			}

			//新增事件
			document.addEventListener('add', add);
			document.addEventListener('moreAction', moreAction);
			//保存后事件
			document.addEventListener('saved', saved);
			var btnArray = ['确认', '取消'];
			//主列表点击事件
			mui('#list').on('tap', '.btn-manager', function() {
				var id = $(this).attr('data-');
				if(!reimbursement)
					reimbursement = plus.webview.getWebviewById('reimbursement');
				mui.fire(reimbursement, 'setId', {
					id: id
				});
				mui.later(function() {
					mui.openWindow({
						url: "reimbursement.html",
						id: "reimbursement",
						show: {
							aniShow: 'pop-in',
							duration: 300
						}
					});
				}, 100);
			});

			mui('#list').on('tap', '.btn-enter', function() {
				var id = $(this).attr('data-');
				addOrder(id);
			});

			//删除
			mui('#list').on('tap', '.btn-delete', function(e) {
				var elem = this;
				var li = elem.parentNode;
				var id = $('.btn-edit', $(li)).attr('id');
				mui.confirm('确认删除该条记录？', '新泰通', btnArray, function(e) {
					if(e.index == 0) {
						//删除操作		
						var param = xtt.getDefaultParam();
						param['Id'] = id;
						mui.ajax(xtt.serverRoot + 'ReimbursementCommon/DelReimbursementSet', {
							type: 'post',
							data: param,
							timeout: 10000,
							beforeSend: function() {
								//loadingMsg('正在恢复会话信息...');
							},
							success: function(res) {
								if(res) {
									if(res.Succeed) {
										mui.toast('删除成功！');
										li.parentNode.removeChild(li);
									} else {
										mui.toast('删除失败！' + res.Message ? res.Message : '');
									}
								} else {
									mui.toast('删除失败，请稍后再试！');
								}
							},
							error: function(xhr, type, errorThrown) {
								mui.toast('请求错误！' + errorThrown);
							}
						});
					} else {
						setTimeout(function() {
							mui.swipeoutClose(li);
						}, 0);
					}
				});
			});
		</script>
	</body>

</html>